openapi: 3.0.3
info:
  title: User Management System
  version: 0.0.0
  description: 'This API supports CRUD operations for user management with authentication
    handled via JWT (JSON Web Tokens). It features three types of users: **admin**
    (who has full access to all functionalities), **moderator** (who can perform all
    actions except deletion), and **simple user** (who can access and manage their
    account but cannot update or delete records). Password resets are facilitated
    through email, which provides a token valid for 30 minutes. To protect against
    unauthorized access, the API will temporarily block access for 5 minutes after
    multiple failed login attempts or invalid JWT token usage.'
paths:
  /api/admin-register/:
    post:
      operationId: api_admin_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRegtrations'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminRegtrations'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminRegtrations'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRegtrations'
          description: ''
  /api/changepassword/:
    post:
      operationId: api_changepassword_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeUserPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangeUserPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangeUserPassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeUserPassword'
          description: ''
  /api/delete-user/{id}/:
    delete:
      operationId: api_delete_user_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/login/:
    post:
      operationId: api_login_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'
          description: ''
  /api/moderator-register/:
    post:
      operationId: api_moderator_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModeratorRegtrations'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ModeratorRegtrations'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ModeratorRegtrations'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModeratorRegtrations'
          description: ''
  /api/profile/:
    get:
      operationId: api_profile_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/register/:
    post:
      operationId: api_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegtrations'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegtrations'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegtrations'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegtrations'
          description: ''
  /api/send-password-reset-email/:
    post:
      operationId: api_send_password_reset_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendPasswordResetEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendPasswordResetEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendPasswordResetEmail'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendPasswordResetEmail'
          description: ''
  /api/update-user/{id}/:
    put:
      operationId: api_update_user_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
    patch:
      operationId: api_update_user_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/user/reset-password/{uidb64}/{token}/:
    post:
      operationId: api_user_reset_password_create
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserPasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserPasswordReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPasswordReset'
          description: ''
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    AdminRegtrations:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 255
        name:
          type: string
          maxLength: 255
        password:
          type: string
          writeOnly: true
          maxLength: 128
        password2:
          type: string
          writeOnly: true
      required:
      - email
      - name
      - password
      - password2
    ChangeUserPassword:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
          maxLength: 255
        password2:
          type: string
          writeOnly: true
          maxLength: 255
      required:
      - password
      - password2
    ModeratorRegtrations:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 255
        name:
          type: string
          maxLength: 255
        password:
          type: string
          writeOnly: true
          maxLength: 128
        password2:
          type: string
          writeOnly: true
      required:
      - email
      - name
      - password
      - password2
    PatchedUserProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 255
        name:
          type: string
          maxLength: 255
    SendPasswordResetEmail:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
      required:
      - email
    UserLogin:
      type: object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
        password:
          type: string
          maxLength: 128
      required:
      - email
      - password
    UserPasswordReset:
      type: object
      properties:
        password:
          type: string
          writeOnly: true
          maxLength: 255
        password2:
          type: string
          writeOnly: true
          maxLength: 255
      required:
      - password
      - password2
    UserProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 255
        name:
          type: string
          maxLength: 255
      required:
      - email
      - id
      - name
    UserRegtrations:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 255
        name:
          type: string
          maxLength: 255
        password:
          type: string
          writeOnly: true
          maxLength: 128
        password2:
          type: string
          writeOnly: true
      required:
      - email
      - name
      - password
      - password2
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
